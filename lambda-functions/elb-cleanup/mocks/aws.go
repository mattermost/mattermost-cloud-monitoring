// Code generated by MockGen. DO NOT EDIT.
// Source: aws.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	elb "github.com/aws/aws-sdk-go/service/elb"
	elbv2 "github.com/aws/aws-sdk-go/service/elbv2"
	gomock "github.com/golang/mock/gomock"
)

// MockResourcer is a mock of Resourcer interface.
type MockResourcer struct {
	ctrl     *gomock.Controller
	recorder *MockResourcerMockRecorder
}

// MockResourcerMockRecorder is the mock recorder for MockResourcer.
type MockResourcerMockRecorder struct {
	mock *MockResourcer
}

// NewMockResourcer creates a new mock instance.
func NewMockResourcer(ctrl *gomock.Controller) *MockResourcer {
	mock := &MockResourcer{ctrl: ctrl}
	mock.recorder = &MockResourcerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourcer) EXPECT() *MockResourcerMockRecorder {
	return m.recorder
}

// DeleteClassiclbs mocks base method.
func (m *MockResourcer) DeleteClassiclbs(context context.Context, elbDescList []*elb.LoadBalancerDescription) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteClassiclbs", context, elbDescList)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteClassiclbs indicates an expected call of DeleteClassiclbs.
func (mr *MockResourcerMockRecorder) DeleteClassiclbs(context, elbDescList interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteClassiclbs", reflect.TypeOf((*MockResourcer)(nil).DeleteClassiclbs), context, elbDescList)
}

// DeleteElbs mocks base method.
func (m *MockResourcer) DeleteElbs(context context.Context, unUsedLBs []elbv2.LoadBalancer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteElbs", context, unUsedLBs)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteElbs indicates an expected call of DeleteElbs.
func (mr *MockResourcerMockRecorder) DeleteElbs(context, unUsedLBs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElbs", reflect.TypeOf((*MockResourcer)(nil).DeleteElbs), context, unUsedLBs)
}

// ListUnUsedClassiclbs mocks base method.
func (m *MockResourcer) ListUnUsedClassiclbs(context context.Context) ([]*elb.LoadBalancerDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUnUsedClassiclbs", context)
	ret0, _ := ret[0].([]*elb.LoadBalancerDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUnUsedClassiclbs indicates an expected call of ListUnUsedClassiclbs.
func (mr *MockResourcerMockRecorder) ListUnUsedClassiclbs(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUnUsedClassiclbs", reflect.TypeOf((*MockResourcer)(nil).ListUnUsedClassiclbs), context)
}

// ListUnusedElbs mocks base method.
func (m *MockResourcer) ListUnusedElbs(context context.Context) ([]elbv2.LoadBalancer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUnusedElbs", context)
	ret0, _ := ret[0].([]elbv2.LoadBalancer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUnusedElbs indicates an expected call of ListUnusedElbs.
func (mr *MockResourcerMockRecorder) ListUnusedElbs(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUnusedElbs", reflect.TypeOf((*MockResourcer)(nil).ListUnusedElbs), context)
}
