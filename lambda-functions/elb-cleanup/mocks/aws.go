// Code generated by MockGen. DO NOT EDIT.
// Source: aws.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	elb "github.com/aws/aws-sdk-go/service/elb"
	elbv2 "github.com/aws/aws-sdk-go/service/elbv2"
	gomock "github.com/golang/mock/gomock"
)

// MockResourcer is a mock of Resourcer interface.
type MockResourcer struct {
	ctrl     *gomock.Controller
	recorder *MockResourcerMockRecorder
}

// MockResourcerMockRecorder is the mock recorder for MockResourcer.
type MockResourcerMockRecorder struct {
	mock *MockResourcer
}

// NewMockResourcer creates a new mock instance.
func NewMockResourcer(ctrl *gomock.Controller) *MockResourcer {
	mock := &MockResourcer{ctrl: ctrl}
	mock.recorder = &MockResourcerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourcer) EXPECT() *MockResourcerMockRecorder {
	return m.recorder
}

// DeleteClassiclb mocks base method.
func (m *MockResourcer) DeleteClassiclb(context context.Context, LoadBalancerName *string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteClassiclb", context, LoadBalancerName)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteClassiclb indicates an expected call of DeleteClassiclb.
func (mr *MockResourcerMockRecorder) DeleteClassiclb(context, LoadBalancerName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteClassiclb", reflect.TypeOf((*MockResourcer)(nil).DeleteClassiclb), context, LoadBalancerName)
}

// DeleteElb mocks base method.
func (m *MockResourcer) DeleteElb(context context.Context, loadBalancerArn *string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteElb", context, loadBalancerArn)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteElb indicates an expected call of DeleteElb.
func (mr *MockResourcerMockRecorder) DeleteElb(context, loadBalancerArn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElb", reflect.TypeOf((*MockResourcer)(nil).DeleteElb), context, loadBalancerArn)
}

// ListUnUsedClassiclb mocks base method.
func (m *MockResourcer) ListUnUsedClassiclb(context context.Context) ([]*elb.LoadBalancerDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUnUsedClassiclb", context)
	ret0, _ := ret[0].([]*elb.LoadBalancerDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUnUsedClassiclb indicates an expected call of ListUnUsedClassiclb.
func (mr *MockResourcerMockRecorder) ListUnUsedClassiclb(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUnUsedClassiclb", reflect.TypeOf((*MockResourcer)(nil).ListUnUsedClassiclb), context)
}

// ListUnusedElb mocks base method.
func (m *MockResourcer) ListUnusedElb(context context.Context) ([]elbv2.LoadBalancer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUnusedElb", context)
	ret0, _ := ret[0].([]elbv2.LoadBalancer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUnusedElb indicates an expected call of ListUnusedElb.
func (mr *MockResourcerMockRecorder) ListUnusedElb(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUnusedElb", reflect.TypeOf((*MockResourcer)(nil).ListUnusedElb), context)
}
